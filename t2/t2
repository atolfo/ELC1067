#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void ler_alunos(int* matricula,char** nomes,int* n ){
    char c;
    char *nome;
    int mat,i,linha;

    nome=(char*)malloc(50*sizeof(char));
    if(nome==NULL)
    {
        printf("\nProblemas com alocacao de memoria, o prorama sera finalizado.\n");
        exit(1);
    }
    FILE*f = fopen("alunos.txt", "r");
    linha = 0;

    while(feof(f) == 0)
    {
        if(fscanf(f, "%d", &mat) <= 0)
        break;

        i = 0;
        c = fgetc(f);

        while(c != '\n' && feof(f)==0)
        {
            nome[i] = c;
            c = fgetc(f);
            i++;
        }
        nome[i] = '\0';
        matricula[linha]=mat;
        nomes[linha]=(char*)malloc((strlen(nome)+1)*sizeof(char));
        strcpy(nomes[linha],nome);
        linha++;
    }
}

void ler_notas(float *medias)
{
    int mat, i=0;
    float z1,z2;
    FILE*f = fopen("notas.txt", "r");
    while(feof(f) == 0)
    {
        if(fscanf(f, "%d %f %f\n", &mat, &z1, &z2) <= 0)
        {
            break;
        }
        medias[i]=(z1+z2)/2;
        i++;
    }
    fclose(f);
}

void procura_aluno(char* nome, char** nomes, int* n, float* medias)
{
    int i;
    for(i=0;i<*n;i++)
    {
        if(strstr(nomes[i], nome)!=NULL)
        {
            printf("%f %s\n", medias[i], nomes[i]);
        }
    }
}

int main (int argc,char** argv)
{
    int *matricula,*n,cont;
    char *nome;
    float *medias;
    char** nomes;

    nome=(char*)malloc(50*sizeof(char));
    medias=(float*)malloc(50*sizeof(float));
    n=matricula=(int*)malloc(50*sizeof(int));
    nomes=(char**)malloc(50*sizeof(char*));

    if(nome==NULL || medias==NULL || n==NULL || matricula==NULL)
    {
        printf("\nProblemas com alocacao de memoria, o prorama sera finalizado.\n");
        exit(1);
    }

    if(argc > 1)
    {
        nome = argv[1];
    }

    printf("%s \n", nome);
    ler_alunos(matricula,nomes,n);
    ler_notas(medias);
    procura_aluno(nome,nomes,n,medias);
    free(n);
    free(nome);
    free(medias);
    free(matricula);
    for(cont=0;cont<*n;cont++)
    {
        free(nomes[cont]);
    }
    free(nomes);
}
